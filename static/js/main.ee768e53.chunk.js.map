{"version":3,"sources":["utils.js","sorting/operations.js","List.js","App.js","sorting/bubble.js","sorting/selection.js","sorting/insertion.js","serviceWorker.js","index.js"],"names":["executeSwap","pair","array","Operation","indexA","indexB","this","Swap","Compare","fn","compareWith","a","b","createOperations","compareFn","localArray","operations","compare","push","applyTo","swap","Element","value","position","id","uniqid","List","values","elements","map","i","highlighted","compared","operation","forEach","element","clearComparison","comparedElements","index","find","swapPositions","clearHighlight","leftElement","rightElement","elementStyle","color","borderBottom","width","transition","listStyle","transform","padding","key","style","display","renderElement","algorithms","name","handler","shouldSort","iterationsSwapsCount","length","Boolean","lastUnsortedElementIndex","smallestNumberIndex","movableElementIndex","j","SelectionPage","useState","state","setState","join","changeValues","time","setTime","picker","Fragment","type","onChange","e","target","step","Number","onClick","algorithm","numbers","trim","split","list","updateState","ReplayPage","stepIndex","setStep","useEffect","window","setTimeout","execute","finish","renderElements","App","className","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee768e53.chunk.js","sourcesContent":["export const executeSwap = (pair, array) => ([ array[pair[0]], array[pair[1]] ] = [ array[pair[1]], array[pair[0]] ]);\n","import { executeSwap } from '../utils';\n\nclass Operation {\n\tconstructor(indexA, indexB) {\n\t\tthis.pair = [ indexA, indexB ];\n\t}\n}\n\nexport class Swap extends Operation {\n\tapplyTo(array) {\n\t\texecuteSwap(this.pair, array);\n\t}\n}\nexport class Compare extends Operation {\n\tconstructor(indexA, indexB, fn) {\n\t\tsuper(indexA, indexB);\n\t\tthis.compareWith = fn;\n\t}\n\n\tapplyTo(array) {\n\t\tconst [ a, b ] = this.pair;\n\n\t\treturn this.compareWith(array[a], array[b]);\n\t}\n}\n\nexport const createOperations = (compareFn, array) => {\n\tconst localArray = [ ...array ];\n\tconst operations = [];\n\n\tconst compareAtIndex = (a, b) => {\n\t\tconst compare = new Compare(a, b, compareFn);\n\n\t\toperations.push(compare);\n\n\t\treturn compare.applyTo(localArray);\n\t};\n\tconst swapAtIndex = (a, b) => {\n\t\tconst swap = new Swap(a, b);\n\n\t\toperations.push(swap);\n\n\t\tswap.applyTo(localArray);\n\t};\n\n\treturn [ operations, compareAtIndex, swapAtIndex ];\n};\n","import React from 'react';\nimport uniqid from 'uniqid';\n\nimport { executeSwap } from './utils';\nimport { Swap, Compare } from './sorting/operations';\n\nclass Element {\n\tconstructor(value, position) {\n\t\tthis.value = value;\n\t\tthis.position = position;\n\t\tthis.id = uniqid();\n\t}\n}\n\nclass List {\n\tconstructor(values) {\n\t\tthis.array = values;\n\t\tthis.elements = values.map((value, i) => new Element(value, i));\n\t\tthis.highlighted = [];\n\t\tthis.compared = [];\n\t}\n\n\texecute(operation) {\n\t\tif (operation instanceof Swap) {\n\t\t\tthis.swap(operation);\n\t\t}\n\n\t\tif (operation instanceof Compare) {\n\t\t\tthis.compare(operation);\n\t\t}\n\t}\n\n\tclearHighlight() {\n\t\tthis.highlighted.forEach((element) => (element.highlighted = false));\n\t}\n\n\tclearComparison() {\n\t\tthis.compared.forEach((element) => (element.compared = false));\n\t}\n\n\tcompare(operation) {\n\t\tthis.clearComparison();\n\n\t\tconst comparedElements = operation.pair.map((index) =>\n\t\t\tthis.elements.find((element) => element.position === index)\n\t\t);\n\n\t\tthis.compared = comparedElements;\n\t\tthis.compared.forEach((element) => (element.compared = true));\n\t}\n\n\tswap(operation) {\n\t\texecuteSwap(operation.pair, this.array);\n\n\t\tthis.swapPositions(operation.pair);\n\t}\n\n\tswapPositions(pair) {\n\t\tthis.clearHighlight();\n\n\t\tconst leftElement = this.elements.find((element) => element.position === pair[0]);\n\t\tconst rightElement = this.elements.find((element) => element.position === pair[1]);\n\n\t\tthis.highlighted = [ leftElement, rightElement ];\n\n\t\tthis.highlighted.forEach((element) => (element.highlighted = true));\n\n\t\t[ leftElement.position, rightElement.position ] = [ rightElement.position, leftElement.position ];\n\t}\n\n\tfinish() {\n\t\tthis.clearHighlight();\n\t\tthis.clearComparison();\n\t}\n\n\trenderElement(element, i) {\n\t\tconst width = 20;\n\t\tconst padding = 10;\n\n\t\tconst elementStyle = {\n\t\t\tcolor: element.highlighted ? 'red' : '',\n\t\t\tborderBottom: element.compared ? '3px solid #ccc' : '3px solid transparent',\n\t\t\twidth: `${width}px`,\n\t\t\ttransition: 'all 0.2s',\n\t\t\tlistStyle: 'none',\n\t\t\ttransform: `translateX(${(element.position - i) * (width + 2 * padding)}px)`,\n\t\t\tpadding: `${padding}px`\n\t\t};\n\n\t\treturn (\n\t\t\t<li key={element.id} style={elementStyle}>\n\t\t\t\t{element.value}\n\t\t\t</li>\n\t\t);\n\t}\n\trenderElements() {\n\t\treturn <ul style={{ display: 'flex', padding: 0 }}>{this.elements.map(this.renderElement)}</ul>;\n\t}\n}\n\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport List from './List';\nimport bubbleSort from './sorting/bubble';\nimport selectionSort from './sorting/selection';\nimport insertionSort from './sorting/insertion';\n\nconst algorithms = [\n\t{ name: 'Bubble sort', handler: bubbleSort },\n\t{ name: 'Selection sort', handler: selectionSort },\n\t{ name: 'Insertion sort', handler: insertionSort }\n];\n\nfunction SelectionPage() {\n\tconst [ state, setState ] = useState({});\n\tconst [ values, changeValues ] = useState([ 2, 4, 3, 5, 6, 1 ].join(' '));\n\tconst [ time, setTime ] = useState(400);\n\n\tconst updateState = (algorithm, name) => {\n\t\tconst numbers = values.trim().split(' ').map(Number);\n\n\t\tsetState({\n\t\t\t...state,\n\t\t\toperations: algorithm(numbers),\n\t\t\tlist: new List(numbers),\n\t\t\tname\n\t\t});\n\t};\n\n\tconst picker = (\n\t\t<React.Fragment>\n\t\t\t<input type=\"text\" value={values} onChange={(e) => changeValues(e.target.value)} />\n\t\t\t<input type=\"number\" step=\"50\" value={time} onChange={(e) => setTime(Number(e.target.value))} />\n\n\t\t\t{algorithms.map(({ name, handler }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<button key={name} onClick={() => updateState(handler, name)}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</button>\n\t\t\t\t);\n\t\t\t})}\n\t\t</React.Fragment>\n\t);\n\n\treturn state.operations ? (\n\t\t<ReplayPage operations={state.operations} list={state.list} name={state.name} time={time} />\n\t) : (\n\t\tpicker\n\t);\n}\n\nfunction ReplayPage({ operations, list, name, time }) {\n\tconst [ stepIndex, setStep ] = useState(0);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tlist.execute(operations[i]);\n\t\t\t\t\tsetStep(i + 1);\n\t\t\t\t}, time * (i + 1));\n\t\t\t}\n\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tlist.finish();\n\t\t\t\tsetStep(stepIndex + 1);\n\t\t\t}, operations.length * time);\n\t\t},\n\t\t[ operations, list ]\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1>{name}</h1>\n\t\t\t<h2>{list.renderElements()}</h2>\n\t\t</React.Fragment>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<SelectionPage />\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { createOperations } from './operations';\n\nexport default function sortBubble(array) {\n\tconst compareFn = (a, b) => a > b;\n\tconst [ operations, compare, swap ] = createOperations(compareFn, array);\n\n\tlet shouldSort = true;\n\n\twhile (shouldSort) {\n\t\tlet iterationsSwapsCount = 0;\n\n\t\tfor (let i = 0; i < array.length - 1; i++) {\n\t\t\tif (compare(i, i + 1)) {\n\t\t\t\tswap(i, i + 1);\n\t\t\t\titerationsSwapsCount++;\n\t\t\t}\n\t\t}\n\n\t\tshouldSort = Boolean(iterationsSwapsCount);\n\t}\n\n\treturn operations;\n}\n","import { createOperations } from './operations';\n\nexport default function sortSelection(array) {\n\tconst compareFn = (a, b) => a < b;\n\tconst [ operations, compare, swap ] = createOperations(compareFn, array);\n\n\tlet lastUnsortedElementIndex = 0;\n\tlet shouldSort = true;\n\n\twhile (shouldSort) {\n\t\tlet smallestNumberIndex = lastUnsortedElementIndex;\n\n\t\tfor (let i = lastUnsortedElementIndex; i < array.length; i++) {\n\t\t\tif (compare(i, smallestNumberIndex)) {\n\t\t\t\tsmallestNumberIndex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (lastUnsortedElementIndex !== smallestNumberIndex) {\n\t\t\tswap(lastUnsortedElementIndex, smallestNumberIndex);\n\t\t}\n\n\t\tlastUnsortedElementIndex++;\n\t\tshouldSort = lastUnsortedElementIndex < array.length;\n\t}\n\n\treturn operations;\n}\n","import { createOperations } from './operations';\n\nexport default function sortInsertion(array) {\n\tconst compareFn = (a, b) => a < b;\n\tconst [ operations, compare, swap ] = createOperations(compareFn, array);\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tlet movableElementIndex = i;\n\n\t\tfor (let j = movableElementIndex - 1; j >= 0; j--) {\n\t\t\tif (compare(movableElementIndex, j)) {\n\t\t\t\tswap(movableElementIndex, j);\n\n\t\t\t\tmovableElementIndex = j;\n\t\t\t} else {\n\t\t\t\tj = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn operations;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}