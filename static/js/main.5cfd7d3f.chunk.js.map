{"version":3,"sources":["utils.js","sorting/operations.js","List.js","sorting/bubble.js","App.js","serviceWorker.js","index.js"],"names":["executeSwap","pair","array","Operation","indexA","indexB","this","Swap","Compare","fn","compareWith","a","b","Element","value","position","id","uniqid","List","values","elements","map","i","highlighted","compared","operation","swap","compare","forEach","element","clearComparison","comparedElements","index","find","swapPositions","clearHighlight","leftElement","rightElement","key","style","color","borderBottom","width","transition","listStyle","transform","padding","display","renderElement","sortBubble","console","log","isSmaller","localArray","operations","shouldSort","iterationsSwapsCount","length","push","applyTo","Boolean","SelectionPage","useState","state","setState","changeValues","picker","Fragment","type","join","onChange","e","target","split","Number","onClick","bubbleSort","list","name","ReplayPage","stepIndex","setStep","useEffect","window","setTimeout","execute","finish","renderElements","App","className","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cfd7d3f.chunk.js","sourcesContent":["export const executeSwap = (pair, array) => ([ array[pair[0]], array[pair[1]] ] = [ array[pair[1]], array[pair[0]] ]);\n","import { executeSwap } from '../utils';\n\nclass Operation {\n\tconstructor(indexA, indexB) {\n\t\tthis.pair = [ indexA, indexB ];\n\t}\n}\n\nexport class Swap extends Operation {\n\tapplyTo(array) {\n\t\texecuteSwap(this.pair, array);\n\t}\n}\nexport class Compare extends Operation {\n\tconstructor(indexA, indexB, fn) {\n\t\tsuper(indexA, indexB);\n\t\tthis.compareWith = fn;\n\t}\n\n\tapplyTo(array) {\n\t\tconst [ a, b ] = this.pair;\n\n\t\treturn this.compareWith(array[a], array[b]);\n\t}\n}\n","import React from 'react';\nimport uniqid from 'uniqid';\n\nimport { executeSwap } from './utils';\nimport { Swap, Compare } from './sorting/operations';\n\nclass Element {\n\tconstructor(value, position) {\n\t\tthis.value = value;\n\t\tthis.position = position;\n\t\tthis.id = uniqid();\n\t}\n}\n\nclass List {\n\tconstructor(values) {\n\t\tthis.array = values;\n\t\tthis.elements = values.map((value, i) => new Element(value, i));\n\t\tthis.highlighted = [];\n\t\tthis.compared = [];\n\t}\n\n\texecute(operation) {\n\t\tif (operation instanceof Swap) {\n\t\t\tthis.swap(operation);\n\t\t}\n\n\t\tif (operation instanceof Compare) {\n\t\t\tthis.compare(operation);\n\t\t}\n\t}\n\n\tclearHighlight() {\n\t\tthis.highlighted.forEach((element) => (element.highlighted = false));\n\t}\n\n\tclearComparison() {\n\t\tthis.compared.forEach((element) => (element.compared = false));\n\t}\n\n\tcompare(operation) {\n\t\tthis.clearComparison();\n\n\t\tconst comparedElements = operation.pair.map((index) =>\n\t\t\tthis.elements.find((element) => element.position === index)\n\t\t);\n\n\t\tthis.compared = comparedElements;\n\t\tthis.compared.forEach((element) => (element.compared = true));\n\t}\n\n\tswap(operation) {\n\t\texecuteSwap(operation.pair, this.array);\n\n\t\tthis.swapPositions(operation.pair);\n\t}\n\n\tswapPositions(pair) {\n\t\tthis.clearHighlight();\n\n\t\tconst leftElement = this.elements.find((element) => element.position === pair[0]);\n\t\tconst rightElement = this.elements.find((element) => element.position === pair[1]);\n\n\t\tthis.highlighted = [ leftElement, rightElement ];\n\n\t\tthis.highlighted.forEach((element) => (element.highlighted = true));\n\n\t\t[ leftElement.position, rightElement.position ] = [ rightElement.position, leftElement.position ];\n\t}\n\n\tfinish() {\n\t\tthis.clearHighlight();\n\t\tthis.clearComparison();\n\t}\n\n\trenderElement(element, i) {\n\t\tconst width = 20;\n\t\tconst padding = 4;\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={element.id}\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: element.highlighted ? 'red' : '',\n\t\t\t\t\tborderBottom: element.compared ? '3px solid #ccc' : '3px solid transparent',\n\t\t\t\t\twidth: `${width}px`,\n\t\t\t\t\ttransition: 'all 0.2s',\n\t\t\t\t\tlistStyle: 'none',\n\t\t\t\t\ttransform: `translateX(${(element.position - i) * (width + 2 * padding)}px)`,\n\t\t\t\t\tpadding: `${padding}px`\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{element.value}\n\t\t\t</li>\n\t\t);\n\t}\n\trenderElements() {\n\t\treturn <ul style={{ display: 'flex', padding: 0 }}>{this.elements.map(this.renderElement)}</ul>;\n\t}\n}\n\nexport default List;\n","import { Swap, Compare } from './operations';\n\nexport default function sortBubble(array) {\n\tconsole.log(array);\n\tconst isSmaller = (a, b) => b < a;\n\tconst localArray = [ ...array ];\n\tconst operations = [];\n\tlet shouldSort = true;\n\n\twhile (shouldSort) {\n\t\tlet iterationsSwapsCount = 0;\n\n\t\tfor (let i = 0; i < localArray.length - 1; i++) {\n\t\t\tconst compare = new Compare(i, i + 1, isSmaller);\n\n\t\t\toperations.push(compare);\n\n\t\t\tif (compare.applyTo(localArray)) {\n\t\t\t\tconst swap = new Swap(i, i + 1);\n\n\t\t\t\tswap.applyTo(localArray);\n\t\t\t\toperations.push(swap);\n\t\t\t\titerationsSwapsCount++;\n\t\t\t}\n\t\t}\n\n\t\tshouldSort = Boolean(iterationsSwapsCount);\n\t}\n\n\treturn operations;\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport List from './List';\nimport bubbleSort from './sorting/bubble';\n\nfunction SelectionPage() {\n\tconst [ state, setState ] = useState({});\n\tconst [ values, changeValues ] = useState([ 2, 4, 3, 5, 1 ]);\n\n\tconst onBubbleClick = () => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\toperations: bubbleSort(values),\n\t\t\tlist: new List(values),\n\t\t\tname: 'Bubble sort'\n\t\t});\n\t};\n\n\tconst picker = (\n\t\t<React.Fragment>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={values.join(' ')}\n\t\t\t\tonChange={(e) => changeValues(e.target.value.split(' ').map(Number))}\n\t\t\t/>\n\n\t\t\t<button onClick={onBubbleClick}>Bubble sort</button>\n\t\t</React.Fragment>\n\t);\n\n\treturn state.operations ? <ReplayPage operations={state.operations} list={state.list} name={state.name} /> : picker;\n}\n\nfunction ReplayPage({ operations, list, name }) {\n\tconst [ stepIndex, setStep ] = useState(0);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tlist.execute(operations[i]);\n\t\t\t\t\tsetStep(i + 1);\n\t\t\t\t}, 500 * (i + 1));\n\t\t\t}\n\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tlist.finish();\n\t\t\t\tsetStep(stepIndex + 1);\n\t\t\t}, operations.length * 500);\n\t\t},\n\t\t[ operations, list ]\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1>{name}</h1>\n\t\t\t<h2>{list.renderElements()}</h2>\n\t\t</React.Fragment>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<SelectionPage />\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}